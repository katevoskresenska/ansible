---
- hosts: localhost
  connection: local
  gather_facts: False

  tasks:

    - name: Provision docker/wp instance
      ec2:
         key_name: myaws
         group: webserver
         region: eu-central-1
         instance_type: t2.micro
         image: ami-090f10efc254eaf55
         wait: true
         instance_tags:
            Name: webserver
         volumes:
            - device_name: /dev/xvda
              volume_type: gp2
              volume_size: 8
              delete_on_termination: true
         assign_public_ip: yes
         vpc_subnet_id: subnet-516a4c2c
         monitoring: no

      register: ec2

      #- name: Add all instance public IPs to host group
      #add_host: hostname={{ item.public_ip }} groups=webservers
      #loop: "{{ ec2.instances }}"

    - name: Add new instance to host group
      add_host:
        hostname: "{{ item.public_ip }}"
        groupname: webservers
      with_items: "{{ ec2.instances }}"

    - name: Wait for SSH to come up
      delegate_to: "{{ item.public_ip }}"
      wait_for_connection:
        delay: 60
        timeout: 320
      with_items: "{{ ec2.instances }}"

- hosts: webservers
  gather_facts: true
  become: true
  tasks:
     - name: Update
       apt: update_cache=yes
     - name: Remove old packages
       apt: autoclean=yes
     - name: Add docker gpg key
       apt_key:  
         url: https://download.docker.com/linux/ubuntu/gpg
         state: present
     - name: Add docker repository
       apt_repository:
         repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable"
         state: present
         filename: docker
     - name: Install misc packages
       apt:
         name: "{{ item }}"
         update_cache: yes
       with_items:
         - "aptitude"
         - "apt-transport-https"
         - "ca-certificates"
         - "curl"
         - "software-properties-common"
     - name: Update
       apt: update_cache=yes      
     - name: Install docker-ce
       apt: pkg=docker-ce state=present
     - name: Install docker-ce-cli
       apt: pkg=docker-ce state=present
     - name: Install docker-compose
       apt: pkg=docker-compose state=present
     - name: Install containerd
       apt: pkg=containerd.io state=present
     - name: Create docker_wp folder
       file:
         path: /home/ubuntu/docker_wp
         state: directory
         mode: 0755
     - name: Change directory to docker_wp folder
       command: chdir=/home/ubuntu/docker_wp ls
     - name: Get repo from git
       git: repo=https://github.com/lilu-dallas/docker_wp/ dest=/home/ubuntu/docker_wp
     - name: Create directory for logs
       file:
         path: /home/ubuntu/docker_wp/logs
         state: directory
         mode: 0755
     - name: Create directory for nginx logs
       file:
         path: /home/ubuntu/docker_wp/logs/nginx
         state: directory
         mode: 0755
     - name: Create directory for database
       file:
         path: /home/ubuntu/docker_wp/mysql
         state: directory
         mode: 0755
     - name: Install required packages
       apt:
         state: present
         update_cache: true
         name:
           - python3-pip
           - python3-setuptools
     - name: Install Python packages
       pip:
         name: 
           - docker
           - docker-compose  
     - name: Run docker-compose
       docker_service:  
         project_src: /home/ubuntu/docker_wp/
         state: present
       register: output  
    
